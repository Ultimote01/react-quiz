{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\React-projects\\\\react-quiz\\\\src\\\\components\\\\Options.js\",\n  _s = $RefreshSig$();\nimport { useQuiz } from \"../contexts/QuizContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Options({\n  question\n}) {\n  _s();\n  const {\n    dispatch,\n    answer,\n    prevPage,\n    answerArray,\n    index\n  } = useQuiz();\n  const hasAnswered = answer !== null;\n  const selectedOption = answerArray[index];\n  console.log(answerArray[index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn btn-option ${index === answer ? \"answer\" : \"\"} ${hasAnswered && !prevPage ? index === question.correctOption ? \"correct\" : index === selectedOption ? '' : \"wrong\" : \"\"} ${hasAnswered && prevPage ? index === answer ? 'correct' : 'wrong' : ''}`,\n      disabled: hasAnswered,\n      onClick: () => dispatch({\n        type: \"newAnswer\",\n        payload: index\n      }),\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Options, \"STSNEY5Lh8FSpZMycOrbCsjMfR4=\", false, function () {\n  return [useQuiz];\n});\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["useQuiz","jsxDEV","_jsxDEV","Options","question","_s","dispatch","answer","prevPage","answerArray","index","hasAnswered","selectedOption","console","log","className","children","options","map","option","correctOption","disabled","onClick","type","payload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/React-projects/react-quiz/src/components/Options.js"],"sourcesContent":["import { useQuiz } from \"../contexts/QuizContext\";\n\nfunction Options({ question }) {\n  const { dispatch, answer ,prevPage,answerArray,index} = useQuiz();\n\n  const hasAnswered = answer !== null;\n  const selectedOption=answerArray[index]\n  console.log(answerArray[index]);\n\n\n  return (\n    <div className=\"options\">\n      {question.options.map((option, index) => (\n        <button\n          className={`btn btn-option ${index === answer ? \"answer\" : \"\"} ${\n            hasAnswered && !prevPage\n              ? index === question.correctOption \n                ? \"correct\"\n                : index===selectedOption?'':\"wrong\"\n              : \"\"\n          } ${hasAnswered && prevPage\n            ?index===answer?'correct':'wrong':''}`}\n          key={option}\n          disabled={hasAnswered}\n          onClick={() => dispatch({ type: \"newAnswer\", payload: index })}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Options;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,QAAQ;IAACC,WAAW;IAACC;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEjE,MAAMW,WAAW,GAAGJ,MAAM,KAAK,IAAI;EACnC,MAAMK,cAAc,GAACH,WAAW,CAACC,KAAK,CAAC;EACvCG,OAAO,CAACC,GAAG,CAACL,WAAW,CAACC,KAAK,CAAC,CAAC;EAG/B,oBACER,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBZ,QAAQ,CAACa,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAET,KAAK,kBAClCR,OAAA;MACEa,SAAS,EAAG,kBAAiBL,KAAK,KAAKH,MAAM,GAAG,QAAQ,GAAG,EAAG,IAC5DI,WAAW,IAAI,CAACH,QAAQ,GACpBE,KAAK,KAAKN,QAAQ,CAACgB,aAAa,GAC9B,SAAS,GACTV,KAAK,KAAGE,cAAc,GAAC,EAAE,GAAC,OAAO,GACnC,EACL,IAAGD,WAAW,IAAIH,QAAQ,GACxBE,KAAK,KAAGH,MAAM,GAAC,SAAS,GAAC,OAAO,GAAC,EAAG,EAAE;MAEzCc,QAAQ,EAAEV,WAAY;MACtBW,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAAC;QAAEiB,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAEd;MAAM,CAAC,CAAE;MAAAM,QAAA,EAE9DG;IAAM,GAJFA,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA7BQF,OAAO;EAAA,QAC0CH,OAAO;AAAA;AAAA6B,EAAA,GADxD1B,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}